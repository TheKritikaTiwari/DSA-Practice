class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        Set<List<Integer>> set = new HashSet<>();
        Arrays.sort(nums);
        for(int i=0; i < nums.length-2; i++){
            if (i > 0 && nums[i] == nums[i - 1]) continue;
            int j = i + 1;
            int k = nums.length - 1;
            while(j<k){
                if(nums[i]+nums[j]+nums[k]==0){
                    if(!set.contains(Arrays.asList(nums[i],nums[j],nums[k]))){
                        set.add(Arrays.asList(nums[i], nums[j], nums[k]));
                    }
                    j++;
                    k--;
                }
                else if(nums[i]+nums[j]+nums[k] < 0){
                    j++;
                }
                else{
                    k--;
                }
            }
        }
        return new ArrayList<>(set);


        // Brute Force Approach
        // Arrays.sort(nums);
        // Set<List<Integer>> set = new HashSet<>();
        // for(int i=0; i < nums.length-2; i++){
        //     for(int j=i+1; j < nums.length-1; j++){
        //         for(int k=j+1; k < nums.length; k++){
        //             if(nums[i] + nums[j] + nums[k] == 0){
        //                 if(!set.contains(Arrays.asList(nums[i],nums[j],nums[k]))){
        //                     set.add(Arrays.asList(nums[i],nums[j],nums[k]));
        //                 }
        //             }
        //         }
        //     }
        // }
        // return new ArrayList<>(set);
    }
}